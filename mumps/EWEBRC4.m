EWEBRC4 ;RC4 Encryption library, written by SAM[ 08/10/2009  2:53 PM ]
 ; &&& Cache Conversion 11.8.2009 : by RETURN
 Q
 
TORCFOUR(STRING,KEY) ; Converts a string to a RC4 ecrypted set of hex pairs
 N HEXSTR1
 S HEXSTR1=$$STRTOHEX(STRING)
 Q $$RCFOUR(HEXSTR1,KEY)
 
DERCFOUR(HEXIN,KEY) ; Converts RC4 encrypted hex pairs to a string
 N OUTSTR
 S OUTSTR=$$RCFOUR(HEXIN,KEY)
 Q $$HEXTOSTR(OUTSTR)
 
RCFOUR(STRING,KEY) 
 I $G(STRING)=""!$G(KEY)="" Q ""
 N COUNTER,KEYPLACE,ACCUMILA,ACCUMILB,RETVAL
 S KEYPLACE=1,ACCUMILA=0,ACCUMILB=0
 F COUNTER=0:1:255  D
 .S ^TMP($J,"S",COUNTER)=COUNTER
 .S ^TMP($J,"K",COUNTER)=$A(KEY,KEYPLACE)
 .S KEYPLACE=KEYPLACE+1
 .I KEYPLACE>$L(KEY) S KEYPLACE=1
 .Q
 F COUNTER=0:1:255  D
 .S ACCUMILA=((ACCUMILA+^TMP($J,"S",COUNTER)+^TMP($J,"K",COUNTER))#256)
 .N TMPVAL
 .S TMPVAL=^TMP($J,"S",COUNTER)
 .S ^TMP($J,"S",COUNTER)=^TMP($J,"S",ACCUMILA)
 .S ^TMP($J,"S",ACCUMILA)=TMPVAL
 .Q
 S ACCUMILA=0
 F COUNTER=0:2:(($L(STRING))-2)  D
 .S ACCUMILB=((ACCUMILB+1)#256)
 .S ACCUMILA=((ACCUMILA+^TMP($J,"S",ACCUMILB))#256)
 .N TMPVAL,KEYVAL,RESVAL,STRVAL,DECVAL
 .S TMPVAL=^TMP($J,"S",ACCUMILB)
 .S ^TMP($J,"S",ACCUMILB)=^TMP($J,"S",ACCUMILA)
 .S ^TMP($J,"S",ACCUMILA)=TMPVAL
 .S KEYVAL=((^TMP($J,"S",ACCUMILA)+^TMP($J,"S",ACCUMILB))#256)
 .S STRVAL=$$HEXTOBIN($E(STRING,COUNTER+1,COUNTER+2))
 .S DECVAL=$$INTTOBIN(^TMP($J,"S",KEYVAL))
 .S RESVAL=$$XORBINS(STRVAL,DECVAL)
 .  ;W $$BINTOINT(RESVAL)_" "_KEYVAL_" "_^TMP($J,"S",KEYVAL)_" "_$E(STRING,COUNTER+1,COUNTER+2),!
 .  ;R *k
 .S RETVAL=$G(RETVAL)_$$INTTOHEX($$BINTOINT(RESVAL))
 .Q
 K ^TMP($J,"S"),^TMP($J,"K")
 Q RETVAL
 
STRTOHEX(STRING) 
 I $G(STRING)="" Q ""
 N COUNTER,HEX
 F COUNTER=1:1:$L(STRING)  D
 .N TMPHEX
 .S TMPHEX=$$INTTOHEX($A($E(STRING,COUNTER)))
 .I $L(TMPHEX)=1 S TMPHEX="0"_TMPHEX
 .S HEX=$G(HEX)_TMPHEX
 .Q
 Q HEX
 
HEXTOSTR(HEX) 
 N STR,COUNTER,INTCHAR
 F COUNTER=1:2:(($L(HEX))-1)  D
 .S INTCHAR=$E(HEX,COUNTER,COUNTER+1)
 .S INTCHAR=$$HEXTOINT(INTCHAR)
 .I INTCHAR>127 Q
 .S STR=$G(STR)_$C(INTCHAR)
 .Q
 Q $G(STR)
 
HEXTOINT(HEX) 
 N RESULT,COUNTER 
 S RESULT=0,HEX=$$UC^LIB(HEX)
 F COUNTER=1:1:$L(HEX)  D
 .S DIGIT=$E(HEX,COUNTER)
 .I "0123456789ABCDEF"'[DIGIT Q
 .I "ABCDEF"[DIGIT S DIGIT=($A(DIGIT)-55)
 .S RESULT=(RESULT*16)+DIGIT
 .Q
 Q RESULT
 
INTTOHEX(INT) 
 I (+$G(INT)=0) Q "00"
 N RESULT,DIGIT
 S RESULT=""
 F  Q:INT=0  D
 .S DIGIT=INT#16
 .S INT=INT\16
 .I DIGIT>9 S DIGIT=$C(55+DIGIT)
 .S RESULT=DIGIT_$G(RESULT)
 .Q
 I $L(RESULT)=1 S RESULT="0"_RESULT
 Q RESULT
 
BINTOINT(BINARY) 
 N PLACE,BINTMP,ACCUM
 S PLACE=1,ACCUM=0,BINTMP=BINARY
 F  Q:BINTMP=""  D
 .S ACCUM=ACCUM+(PLACE*$E(BINTMP,$L(BINTMP)))
 .S BINTMP=$E(BINTMP,1,$L(BINTMP)-1)
 .S PLACE=PLACE*2
 .Q
 Q ACCUM
 
INTTOBIN(NUMBER) 
 N BINARY
 F  Q:NUMBER=0  D
 .S BINARY=$G(BINARY)_(NUMBER#2)
 .S NUMBER=NUMBER\2
 .Q
 I $G(BINARY)="" S BINARY="00000000"
 Q $$PADLZERO($RE(BINARY))
        
HEXTOBIN(HEXNUM) 
 N HEXNUM1,HEXNUM2,HEXBIN
 I $L(HEXNUM)>2 Q 0
 S HEXNUM1=$E(HEXNUM,$L(HEXNUM)),HEXNUM2=0
 I $L(HEXNUM)=2 S HEXNUM2=$E(HEXNUM,1,1)
 S HEXBIN=$$HXCTOBIN(HEXNUM2)_$$HXCTOBIN(HEXNUM1)
 Q HEXBIN
 
HXCTOBIN(HEXCHAR) ; Hex char to bin
 I ((HEXCHAR'=0)&(+HEXCHAR=0)) S HEXCHAR=$$UC^LIB(HEXCHAR)
 I HEXCHAR=0 Q "0000"
 I HEXCHAR=1 Q "0001"
 I HEXCHAR=2 Q "0010"
 I HEXCHAR=3 Q "0011"
 I HEXCHAR=4 Q "0100"
 I HEXCHAR=5 Q "0101"
 I HEXCHAR=6 Q "0110"
 I HEXCHAR=7 Q "0111"
 I HEXCHAR=8 Q "1000"
 I HEXCHAR=9 Q "1001"
 I HEXCHAR="A" Q "1010"
 I HEXCHAR="B" Q "1011"
 I HEXCHAR="C" Q "1100"
 I HEXCHAR="D" Q "1101"
 I HEXCHAR="E" Q "1110"
 I HEXCHAR="F" Q "1111"
 Q "0000" 
 
XORBINS(BIN1,BIN2)  ; XORS two eight bit binary numbers
 I ($G(BIN1)="")!($G(BIN1)=$G(BIN2))!($L($G(BIN1))>8) Q "00000000"
 I $L(BIN1)<8 S BIN1=$$PADLZERO(BIN1)
 I $G(BIN2)="" Q BIN1
 I $L(BIN2)<8 S BIN2=$$PADLZERO(BIN2)
 N PLACECNT,XORVAL
 F PLACECNT=1:1:8  D
 .I $E(BIN1,PLACECNT)=$E(BIN2,PLACECNT) S XORVAL=$G(XORVAL)_0
 .I $E(BIN1,PLACECNT)'=$E(BIN2,PLACECNT) S XORVAL=$G(XORVAL)_1
 .Q
 Q XORVAL
 
PADLZERO(BINARYNO)  ; Pad a binary number out to 8 chars with zeros
 I $G(BINARYNO)="" Q "00000000"
 F  Q:$L(BINARYNO)=8  D
 .S BINARYNO=0_BINARYNO
 .Q
 Q BINARYNO
 ;##Packaged on 61747,33818 for (13579) uci/patch=29/2761